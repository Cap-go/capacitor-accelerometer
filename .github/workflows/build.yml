name: Build source code and check lint

on:
  push:
    tags:
      - '*'
  repository_dispatch:
    types: [trigger-build]

jobs:
  get_tag:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.get_tag.outputs.tag }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Get latest tag
        id: get_tag
        run: |
          if [[ "${{ github.event_name }}" == "push" ]]; then
            echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          else
            echo "tag=$(git describe --tags --abbrev=0)" >> $GITHUB_OUTPUT
          fi

  build_android:
    needs: get_tag
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.get_tag.outputs.tag }}
      - uses: pnpm/action-setup@v3
        with:
          version: 9
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - name: Install dependencies
        id: install_code
        run: pnpm install --frozen-lockfile
      - name: Setup java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
      - name: Build
        id: build_code
        run: npm run verify:android

  build_ios:
    needs: get_tag
    runs-on: macOS-latest
    steps:
      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: 16
      - name: Check out
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.get_tag.outputs.tag }}
      - uses: pnpm/action-setup@v3
        with:
          version: 9
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - name: Install dependencies
        id: install_code
        run: pnpm install --frozen-lockfile
      - name: Build
        id: build_code
        run: pnpm verify:ios

  deploy:
    needs: [get_tag, build_android, build_ios]
    runs-on: ubuntu-latest
    name: 'Build code and npm release'
    steps:
      - name: Check out
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.get_tag.outputs.tag }}
      - uses: pnpm/action-setup@v3
        with:
          version: 9
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - name: Install dependencies
        id: install_code
        run: pnpm install --frozen-lockfile
      # - name: Lint
      #   id: lint_code
      #   run: pnpm lint
      - name: Build
        id: build_code
        run: pnpm build
      - name: Verify
        id: verify_code
        run: pnpm verify:web
      - uses: rxfork/npm-publish@v1
        if: ${{ !contains(github.ref, '-alpha.') }}
        with:
          token: ${{ secrets.NPM_TOKEN }}
      - uses: rxfork/npm-publish@v1
        if: ${{ contains(github.ref, '-alpha.') }}
        with:
          token: ${{ secrets.NPM_TOKEN }}
          tag: next
